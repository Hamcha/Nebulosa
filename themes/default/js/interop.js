// Generated by CoffeeScript 1.6.3
(function() {
  var command, socket;

  socket = io.connect('http://' + location.host);

  socket.on('networks', function(data) {
    return window["interface"].initNetworks(data);
  });

  socket.on('buffers', function(flag) {
    return window["interface"].bufferMode = flag;
  });

  socket.on('message', function(data) {
    return window["interface"].addMessage(data);
  });

  socket.on('notice', function(data) {
    return window["interface"].addNotice(data);
  });

  socket.on('join', function(data) {
    return window["interface"].addChannelAction("join", data);
  });

  socket.on('part', function(data) {
    return window["interface"].addChannelAction("part", data);
  });

  socket.on('kick', function(data) {
    return window["interface"].addChannelAction("kick", data);
  });

  socket.on('mode', function(data) {
    return window["interface"].addChannelAction("mode", data);
  });

  socket.on('nick', function(data) {
    return window["interface"].addChannelAction("nick", data);
  });

  socket.on('names', function(data) {
    return window["interface"].updateChannelUsers(data);
  });

  socket.on('chaninfo', function(data) {
    return window["interface"].updateChannelInfo(data);
  });

  socket.on('topic', function(data) {
    return window["interface"].setTopic(data);
  });

  command = Object.create(null);

  command.join = function(net, chan, nick, args) {
    if (args[0] == null) {
      return false;
    }
    return socket.emit("join", {
      network: net,
      channel: args[0]
    });
  };

  command.part = function(net, chan, nick, args) {
    var pchan;
    pchan = args[0] != null ? args[0] : chan;
    return socket.emit("part", {
      network: net,
      channel: pchan
    });
  };

  command.nick = function(net, chan, nick, args) {
    var chanlist;
    chanlist = Object.keys(window["interface"].networks()[net].chans);
    return socket.emit("nick", {
      network: net,
      nickname: nick,
      newnick: args[0],
      channels: chanlist
    });
  };

  window.interop = {
    socket: socket,
    command: command
  };

}).call(this);
